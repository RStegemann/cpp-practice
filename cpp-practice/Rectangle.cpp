#include "Rectangle.h"

#include <iostream>

// Better to rely on default copy constructor generated by compiler if it doesn't require some special handling
/*Rectangle::Rectangle(const Rectangle& source)
{
    this->width = source.width;
    this->height = source.height;
    this->color = source.color;
}*/

Rectangle::Rectangle(int width, int height) : width{width}, height{height} // Member initializer list is more efficient than using method body
{
}

Rectangle::Rectangle(int width, int height, const std::string& color) : Rectangle(width, height) // Constructor delegation
{
    this->color = color;
}

void Rectangle::draw() const
{
    std::cout << "Drawing a rectangle" << std::endl;
    std::cout << "Width: " << width << " Height: " << height << std::endl;
}

int Rectangle::get_area() const
{
    return width * height;
}

int Rectangle::get_width() const
{
    return width;
}

void Rectangle::set_width(int width)
{
    if(width < 0)
    {
        throw std::invalid_argument("width");
    }
    this->width = width;
}

int Rectangle::get_height() const
{
    return height;
}

void Rectangle::set_height(int height)
{
    if(height < 0)
    {
        throw std::invalid_argument("height");
    }
    this->height = height;
}
